openapi: 3.1.0
info:
  title: CrowdFinder API
  version: 1.0.0

servers:
  - url: http://localhost:3000/v1


components:
  # basic authentication
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    Activity:
      type: object
      properties:
        activity_name:
          type: string
        activity_description:
          type: string
        activity_category:
          type: array
          items:
            type: string
        activity_location:
          type: string

  parameters:
    PageLimit:
      name: limit
      in: query
      description: Limits the number of activities returned
      schema:
        type: integer

    PageOffset:
      name: offset
      in: query
      description: Specifies the page number of the activities to be displayed
      schema:
        type: integer

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string

security:
  - BasicAuth: []

# path items
paths:
  /activity:
    get:
      description: Returns a list of activities
      # query parameters
      parameters:
        # - name: limit
        #   in: query
        #   description: Limits the number of activities returned
        #   schema:
        #     type: integer
        # - name: offset
        #   in: query
        #   description: Specifies the page number of the activities to be displayed
        #   schema:
        #     type: integer
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageOffset'

      # responses
      responses:
        '200':
          description: Successfully returned a list of activities
          content:
            application/json:
              schema:
                type: array
                items:
                  # type: object
                  # required:
                  #   - activity_name
                  #   - activity_location
                  # properties:
                  #   activity_name:
                  #     type: string
                  #   activity_description:
                  #     type: string
                  #   activity_category:
                  #     type: array
                  #     items:
                  #       type: string
                  #   activity_location:
                  #     type: string
                  $ref: '#/components/schemas/Activity'

        '400':
          # description: Invalid request
          # content:
          #   application/json:
          #     schema:
          #       type: object
          #       properties:
          #         message:
          #           type: string
          $ref: '#/components/responses/400Error'

    # request body
    post:
      description: Enable user create a new activity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              # type: object
              # required:
              #   - activity_name
              #   - activity_location
              # properties:
              #   activity_name:
              #     type: string
              #   activity_description:
              #     type: string
              #   activity_category:
              #     type: array
              #     items:
              #       type: string
              #   activity_location:
              #     type: string
              $ref: '#/components/schemas/Activity'

      responses:
        '200':
          description: Successfully created new activity

        '400':
          # description: Invalid request
          # content:
          #   application/json:
          #     schema:
          #       type: object
          #       properties:
          #         message:
          #           type: string
          $ref: '#/components/responses/400Error'

  /activites/{foo}:
    get:
      description: Get information of an activity from its foo
      parameters:
        - name: foo
          in: path
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successfully returned an activity
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity_name:
                    type: string
                  activity_description:
                    type: string
                  activity_category:
                    type: array
                    items:
                      type: string
                  activity_location:
                    type: string

        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


# https://datatracker.ietf.org/doc/html/draft-bhutton-json-schema-00#section-4.2.1
